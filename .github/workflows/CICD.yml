name: CI-CD-Pipeline-to-AWS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - test

jobs:
#   Client-CICD:
#     name: Client-CICD
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push images to Amazon ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         run: |
#           docker build -t $ECR_REGISTRY/web:latest ./web
#           docker push $ECR_REGISTRY/web:latest
  
#   Server-CICD:
#     name: Server-CICD
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push images to Amazon ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REACT_APP_HOST: ${{ secrets.BACKEND_URL }} 
#         run: |
#           sh ./backend/mysql.sh
#           docker container ls
#           docker build -t $ECR_REGISTRY/backend:latest ./backend
#           docker push $ECR_REGISTRY/backend:latest

  Mobile-CI:
    name: Mobile-CI
    runs-on: ubuntu-latest

    steps: 
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          cd mobile
          npm install
      - name: Run tests
        run: |
          cd mobile
          npm test

    
                
